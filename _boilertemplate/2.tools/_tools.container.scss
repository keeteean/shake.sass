/**
 ******************************************************************************
 *** CONTAINER TOOL ***
 ******************************************************************************
 *
 * The container tool is responsible for creating smart, flexible and responsive
 * containers.
 *
 * Here you can setup the default and custom containers with size (`max-with`)
 * and paddings. Then use it as mixin.
 *
 * based on iota.css
 * @author Dimitris Psaropoulos <info@harby.me>
 * @author Krisztian Pinter <krisz@keeteean.com>
 *
 * @require {mixin} _generate-unit <2.tools/libraries/_generate-unit.scss>
 * @see 4.objects/_objects.container.scss for BEM class based default and custom
 * containers
 */


/**
 * Imports
 */

@use "libraries";
@use "../settings";


/**
 * Settings
 */

/**
 * Default container gutter
 *
 * Allows you to specify the default set of padding left and right of your
 * container. You can use a map in case you would like to specify responsive
 * gutter sizes.
 *
 * @type Number | List | Map
 */

$tools-container-gutter-default   : settings.$container-gutter-default;


/**
 * Default container size
 *
 * Allows you to specify the default max-width of your container. You can use a
 * map in case you would like to specify a responsive size.
 *
 * @type String | Map
 */

$tools-container-size-default     : settings.$container-size-default;


/**
 * Container padding
 *
 * It's calculate the required responsive paddings.
 *
 * @type Mixin
 * @parameter {number | map} $size - Padding values.
 * @access private
 */


/**
 * Container size
 *
 * It's calculate the required responsive container size (max-width).
 *
 * @type Mixin
 * @parameter {number | map} $size - Max-width values.
 * @access private
 */


/**
 * Container mixin
 *
 * With container mixin you can generate the default and custom sized
 * containers.
 *
 * @type Mixin
 * @parameter {number | map} $padding - Padding values.
 * @parameter {number | map} $size - Container size (max-width) values.
 * @require {mixin} _container-padding
 * @require {mixin} _container-size
 *
 *
 * Examples
 *
 * Default container
 *
 * @example
 *   .section__container {
 *      @include make-container;
 *   }
 *
 * Custom container
 *
 * You can define custom paddings and sizes (widths) but you can use the
 * default `$tools-container-gutter-default` and
 * `$tools-container-size-default` ones too.
 *
 * @example
 *   $tools-container-gutter-gallery : (
 *     null   : 1.2rem,
 *     medium : 2.4rem
 *   );
 *   $tools-container-size-gallery : (
 *     null   : 100%,
 *     medium : 102.4rem
 *   );
 *
 *   .gallery__container {
 *     @include make-container(
 *       $padding: $tools-container-gutter-gallery,
 *       $size: $tools-container-size-gallery
 *     )
 */


/**
 * Import Container Tool from Shake.sass.
 */

@forward "node_modules/shake.sass/2.tools/tools.container";
