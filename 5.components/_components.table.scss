/**
 ******************************************************************************
 *** TABLE COMPONENT ***
 ******************************************************************************
 *
 * Css class based table themings, like responsive table.
 */


/**
 * Imports
 */
@use "../tools" as *;


/**
 ** Settings **
 */

/**
 * Responsive Table
 */

$_responsive-table                  : true !default;
$_responsive-table-label-padding    : 0 .6em 0 0 !default;
$_responsive-table-label-width      : 30% !default;
$_responsive-table-content-width    : 67% !default;


/**
 * Responsive Table Component
 *
 * Responsive CSS only table component based on Filament Group's Tablesaw.
 * There is no any styling only layout needed properties.
 * @see `3.base/_base.table.scss` for base theming `<table>` element.
 * @link https://github.com/filamentgroup/tablesaw
 *
 * @require {boolean} $base-table-normalize Should be true! <3.base/_base.reset.scss>
 *
 * @example
 *   <table class="c-table">
 *     <thead>
 *       <tr>
 *         <th>name</th>
 *         <th>genre</th>
 *         <th>release date</th>
 *       </tr>
 *     </thead>
 *     <tbody>
 *       <tr>
 *         <td>
 *           <b class="c-table__cell-label">name</b>
 *           <span class="c-table__cell-content">The Shawshank Redemption</span>
 *         </td>
 *         <td>
 *           <b class="c-table__cell-label">genre</b>
 *           <span class="c-table__cell-content">Crime, Drama</span>
 *         </td>
 *         <td>
 *           <b class="c-table__cell-label">release date</b>
 *           <span class="c-table__cell-content">14 October 1994</span>
 *         </td>
 *       </tr>
 *     </tbody>
 *   </table>
 *
 * 1. Show the table cells as a block level element.
 * 2. Make the label elements a percentage width.
 * 3. For grouped headers, have a different style to visually separate the
 *    levels by classing the first label in each col group.
 * 4. Avoid double strokes when stacked.
 * 5. Show the table header rows.
 * 6. Hide the labels in each cell.
 */

@if $_responsive-table == true {
  .c-table {
    max-width: 100%;
    padding-block: 0;
    padding-inline: 0;
    empty-cells: show;
    border-block: 0;
    border-inline: 0;

    * {
      box-sizing: border-box;
    }

    // Theming table rows.
    tr {
      @include breakpoint(medium) {
        display: table-row;
      }
    }

    // Theming table cells.
    td,
    th {
      display: block; // 1.
      text-align: start;

      @include breakpoint(medium) {
        display: table-cell; // 5.
      }

      .c-table__cell-label {
        display: inline-block;
        width: $_responsive-table-label-width; // 2.
        padding-block: $_responsive-table-label-padding;
        padding-inline: $_responsive-table-label-padding;
        vertical-align: top;

        @include breakpoint(medium) {
          display: none !important; // 6.
        }
      }

      .c-table__cell-label--top {
        display: block; // 3.
        margin-block: .4em; // 3.
        margin-inline: 0; // 3.
        padding-block: .4em; // 3.
        padding-inline: 0; // 3.
      }

      .c-table__cell-content {
        display: inline-block;
        max-width: $_responsive-table-content-width;

        @include breakpoint(medium) {
          display: block;
          max-width: none;
        }
      }
    }

    thead {
      th,
      td {
        display: none;

        @include breakpoint(medium) {
          display: table-cell; // 5.
        }
      }
    }

    tbody {
      tr {
        display: block;
        width: 100%;

        @include breakpoint(medium) {
          display: table-row;
        }
      }

      th,
      td {
        width: 100%;

        @include breakpoint(medium) {
          width: auto;
        }
      }
    }

    td:empty,
    th:empty {
      display: none;

      @include breakpoint(medium) {
        display: table-cell;
      }
    }
  }

  // Theming table head
  th.c-table__group {
    tbody & {
      margin-block-start: -.1rem; // 4.
    }

    .c-table__cell-label {
      display: none !important; // 4.
    }
  }
}
